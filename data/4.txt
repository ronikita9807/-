Результатом первого этапа являются сформулированные требования, то есть
внешняя спецификация, описание системы с точки зрения пользователя.
Проектирование есть сложный процесс проектирования всей системы в целом.
Часто этот этап разбивается на два подэтапа: проектирование структуры системы
(проектирование “в большом”), и проектирование совокупности взаимосвязанных
подсистем (проектирование “в малом”). На этапе проектирования осуществляется
процесс, который называют управлением сложностью.
Как и все сложные системы, сложные программы имеют иерархическую
структуру, а уровни их иерархии отражают различные уровни абстракции, следующие
друг из друга, но не тождественные др гу другу. Эти ур вони со товетствуют
взаимозависимым подсистемам, которые сами могут иметь сложную, иерархическую
структуру. На этапе проектирования широко применяется метод “разделяй и властвуй”.
При проектировании сложных программных комплексов их обычно стараются
разложить на некоторое число относительно небольших подсистем, каждую из которых
можно отладить независимо от других (“автономно”). Основная сложность
проектирования – определить основания для разделения общей системы на
составляющие ее подсистемы. Выбор подсистем часто зависит от разработчика и
существенно влияет как на сложность процесса проектирования, так и на конечное
качество программного продукта. Такое разложение называется декомпозицией
программы.
Декомпозицию одной и той же системы можно проводить, основываясь на
разных ее свойствах. Алгоритмическая декомпозиция разделяет программную систему
по алгоритмам, в ней используемым. Такой метод декомпозиции ассоциируется со
структурным программированием и методом проектирования “сверху-вниз”. Каждый
отдельный полученный в результате модуль системы выполняет какой-либо один
этапов работы общего системного процесса. Данные в таком подходе играют
пассивную роль.
Объектно-ориентированная декомпозиция связана с выделением отдельных
объектов, которые способны воспринимать направляемые им сообщения и отвечать
выполнением тех или иных ответных действий. Алгоритмы в такой модели теряют
свою независимость, они превращаются в операции над выделенными объектами.
Активную роль в таком подходе приобретают данные программ, то есть объекты. Эти
объекты обладают не только информационной составляющей (значениями), но и
действиями.
